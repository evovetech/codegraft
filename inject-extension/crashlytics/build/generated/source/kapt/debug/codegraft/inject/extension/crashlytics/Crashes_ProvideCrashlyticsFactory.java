// Generated by Dagger (https://google.github.io/dagger).
package codegraft.inject.extension.crashlytics;

import com.crashlytics.android.Crashlytics;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class Crashes_ProvideCrashlyticsFactory implements Factory<Crashlytics> {
  private final Crashes module;

  private final Provider<Kits> kitsProvider;

  public Crashes_ProvideCrashlyticsFactory(Crashes module, Provider<Kits> kitsProvider) {
    this.module = module;
    this.kitsProvider = kitsProvider;
  }

  @Override
  public Crashlytics get() {
    return Preconditions.checkNotNull(
        module.provideCrashlytics(kitsProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Crashes_ProvideCrashlyticsFactory create(
      Crashes module, Provider<Kits> kitsProvider) {
    return new Crashes_ProvideCrashlyticsFactory(module, kitsProvider);
  }

  public static Crashlytics proxyProvideCrashlytics(Crashes instance, Kits kits) {
    return Preconditions.checkNotNull(
        instance.provideCrashlytics(kits),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
