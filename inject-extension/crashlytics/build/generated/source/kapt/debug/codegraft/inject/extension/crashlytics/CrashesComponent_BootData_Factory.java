// Generated by Dagger (https://google.github.io/dagger).
package codegraft.inject.extension.crashlytics;

import android.app.Application;
import dagger.internal.Factory;
import io.fabric.sdk.android.Fabric;
import javax.inject.Provider;

public final class CrashesComponent_BootData_Factory implements Factory<CrashesComponent_BootData> {
  private final Provider<Fabric> fabricProvider;

  private final Provider<Application> applicationProvider;

  public CrashesComponent_BootData_Factory(
      Provider<Fabric> fabricProvider, Provider<Application> applicationProvider) {
    this.fabricProvider = fabricProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public CrashesComponent_BootData get() {
    return new CrashesComponent_BootData(fabricProvider.get(), applicationProvider.get());
  }

  public static CrashesComponent_BootData_Factory create(
      Provider<Fabric> fabricProvider, Provider<Application> applicationProvider) {
    return new CrashesComponent_BootData_Factory(fabricProvider, applicationProvider);
  }

  public static CrashesComponent_BootData newCrashesComponent_BootData(
      Fabric fabric, Application application) {
    return new CrashesComponent_BootData(fabric, application);
  }
}
