// Generated by Dagger (https://google.github.io/dagger).
package codegraft.inject.extension.realm;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.realm.RealmConfiguration;
import javax.inject.Provider;
import kotlin.jvm.functions.Function1;

public final class RealmBootstrapModule_ProvideRealmConfigurationFactory
    implements Factory<RealmConfiguration> {
  private final RealmBootstrapModule module;

  private final Provider<Application> appProvider;

  private final Provider<
          Function1<? super RealmConfiguration.Builder, ? extends RealmConfiguration>>
      realmInitProvider;

  public RealmBootstrapModule_ProvideRealmConfigurationFactory(
      RealmBootstrapModule module,
      Provider<Application> appProvider,
      Provider<Function1<? super RealmConfiguration.Builder, ? extends RealmConfiguration>>
          realmInitProvider) {
    this.module = module;
    this.appProvider = appProvider;
    this.realmInitProvider = realmInitProvider;
  }

  @Override
  public RealmConfiguration get() {
    return Preconditions.checkNotNull(
        module.provideRealmConfiguration(appProvider.get(), realmInitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static RealmBootstrapModule_ProvideRealmConfigurationFactory create(
      RealmBootstrapModule module,
      Provider<Application> appProvider,
      Provider<Function1<? super RealmConfiguration.Builder, ? extends RealmConfiguration>>
          realmInitProvider) {
    return new RealmBootstrapModule_ProvideRealmConfigurationFactory(
        module, appProvider, realmInitProvider);
  }

  public static RealmConfiguration proxyProvideRealmConfiguration(
      RealmBootstrapModule instance,
      Application app,
      Function1<? super RealmConfiguration.Builder, ? extends RealmConfiguration> realmInit) {
    return Preconditions.checkNotNull(
        instance.provideRealmConfiguration(app, realmInit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
