// Generated by Dagger (https://google.github.io/dagger).
package codegraft.inject.extension.okhttp3;

import android.app.Application;
import dagger.internal.Factory;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class OkhttpComponent_BootData_Factory implements Factory<OkhttpComponent_BootData> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<Application> applicationProvider;

  public OkhttpComponent_BootData_Factory(
      Provider<OkHttpClient> okHttpClientProvider, Provider<Application> applicationProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public OkhttpComponent_BootData get() {
    return new OkhttpComponent_BootData(okHttpClientProvider.get(), applicationProvider.get());
  }

  public static OkhttpComponent_BootData_Factory create(
      Provider<OkHttpClient> okHttpClientProvider, Provider<Application> applicationProvider) {
    return new OkhttpComponent_BootData_Factory(okHttpClientProvider, applicationProvider);
  }

  public static OkhttpComponent_BootData newOkhttpComponent_BootData(
      OkHttpClient okHttpClient, Application application) {
    return new OkhttpComponent_BootData(okHttpClient, application);
  }
}
