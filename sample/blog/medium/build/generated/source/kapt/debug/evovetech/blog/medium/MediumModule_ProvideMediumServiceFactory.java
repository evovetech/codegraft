// Generated by Dagger (https://google.github.io/dagger).
package evovetech.blog.medium;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class MediumModule_ProvideMediumServiceFactory implements Factory<MediumService> {
  private final MediumModule module;

  private final Provider<Retrofit> retrofitProvider;

  public MediumModule_ProvideMediumServiceFactory(
      MediumModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MediumService get() {
    return Preconditions.checkNotNull(
        module.provideMediumService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static MediumModule_ProvideMediumServiceFactory create(
      MediumModule module, Provider<Retrofit> retrofitProvider) {
    return new MediumModule_ProvideMediumServiceFactory(module, retrofitProvider);
  }

  public static MediumService proxyProvideMediumService(MediumModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideMediumService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
