// Generated by Dagger (https://google.github.io/dagger).
package evovetech.blog.medium;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class MediumComponent_Implementation_Factory
    implements Factory<MediumComponent_Implementation> {
  private final Provider<MediumClient> mediumClientProvider;

  private final Provider<MediumUserComponent.Builder> builderProvider;

  public MediumComponent_Implementation_Factory(
      Provider<MediumClient> mediumClientProvider,
      Provider<MediumUserComponent.Builder> builderProvider) {
    this.mediumClientProvider = mediumClientProvider;
    this.builderProvider = builderProvider;
  }

  @Override
  public MediumComponent_Implementation get() {
    return new MediumComponent_Implementation(mediumClientProvider, builderProvider);
  }

  public static MediumComponent_Implementation_Factory create(
      Provider<MediumClient> mediumClientProvider,
      Provider<MediumUserComponent.Builder> builderProvider) {
    return new MediumComponent_Implementation_Factory(mediumClientProvider, builderProvider);
  }

  public static MediumComponent_Implementation newMediumComponent_Implementation(
      Provider<MediumClient> mediumClientProvider,
      Provider<MediumUserComponent.Builder> builderProvider) {
    return new MediumComponent_Implementation(mediumClientProvider, builderProvider);
  }
}
