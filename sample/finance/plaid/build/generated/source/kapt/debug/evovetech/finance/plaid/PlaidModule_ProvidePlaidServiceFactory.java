// Generated by Dagger (https://google.github.io/dagger).
package evovetech.finance.plaid;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class PlaidModule_ProvidePlaidServiceFactory implements Factory<PlaidService> {
  private final PlaidModule module;

  private final Provider<Retrofit> retrofitProvider;

  public PlaidModule_ProvidePlaidServiceFactory(
      PlaidModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public PlaidService get() {
    return Preconditions.checkNotNull(
        module.providePlaidService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static PlaidModule_ProvidePlaidServiceFactory create(
      PlaidModule module, Provider<Retrofit> retrofitProvider) {
    return new PlaidModule_ProvidePlaidServiceFactory(module, retrofitProvider);
  }

  public static PlaidService proxyProvidePlaidService(PlaidModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.providePlaidService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
