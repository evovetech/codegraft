// Generated by Dagger (https://google.github.io/dagger).
package evovetech.finance.plaid;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class PlaidModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final PlaidModule module;

  private final Provider<Application> appProvider;

  private final Provider<OkHttpClient> clientProvider;

  public PlaidModule_ProvideRetrofitFactory(
      PlaidModule module,
      Provider<Application> appProvider,
      Provider<OkHttpClient> clientProvider) {
    this.module = module;
    this.appProvider = appProvider;
    this.clientProvider = clientProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit(appProvider.get(), clientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static PlaidModule_ProvideRetrofitFactory create(
      PlaidModule module,
      Provider<Application> appProvider,
      Provider<OkHttpClient> clientProvider) {
    return new PlaidModule_ProvideRetrofitFactory(module, appProvider, clientProvider);
  }

  public static Retrofit proxyProvideRetrofit(
      PlaidModule instance, Application app, OkHttpClient client) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit(app, client),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
