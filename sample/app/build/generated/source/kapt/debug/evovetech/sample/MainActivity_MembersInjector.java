// Generated by Dagger (https://google.github.io/dagger).
package evovetech.sample;

import codegraft.inject.Plugins;
import dagger.MembersInjector;
import io.realm.Realm;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Plugins> pluginsProvider;

  private final Provider<Realm> realmProvider;

  private final Provider<User.Manager> userManagerProvider;

  public MainActivity_MembersInjector(
      Provider<Plugins> pluginsProvider,
      Provider<Realm> realmProvider,
      Provider<User.Manager> userManagerProvider) {
    this.pluginsProvider = pluginsProvider;
    this.realmProvider = realmProvider;
    this.userManagerProvider = userManagerProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<Plugins> pluginsProvider,
      Provider<Realm> realmProvider,
      Provider<User.Manager> userManagerProvider) {
    return new MainActivity_MembersInjector(pluginsProvider, realmProvider, userManagerProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectPlugins(instance, pluginsProvider.get());
    injectRealm(instance, realmProvider.get());
    injectUserManager(instance, userManagerProvider.get());
  }

  public static void injectPlugins(MainActivity instance, Plugins plugins) {
    instance.plugins = plugins;
  }

  public static void injectRealm(MainActivity instance, Realm realm) {
    instance.realm = realm;
  }

  public static void injectUserManager(MainActivity instance, User.Manager userManager) {
    instance.userManager = userManager;
  }
}
