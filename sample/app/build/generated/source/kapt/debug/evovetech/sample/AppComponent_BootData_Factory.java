// Generated by Dagger (https://google.github.io/dagger).
package evovetech.sample;

import codegraft.inject.BaseComponent_BootData;
import codegraft.inject.extension.crashlytics.CrashesComponent_BootData;
import codegraft.inject.extension.okhttp3.OkhttpComponent_BootData;
import codegraft.inject.extension.realm.RealmComponent_BootData;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AppComponent_BootData_Factory implements Factory<AppComponent_BootData> {
  private final Provider<RealmComponent_BootData> realmComponent_BootDataProvider;

  private final Provider<OkhttpComponent_BootData> okhttpComponent_BootDataProvider;

  private final Provider<CrashesComponent_BootData> crashesComponent_BootDataProvider;

  private final Provider<BaseComponent_BootData> baseComponent_BootDataProvider;

  public AppComponent_BootData_Factory(
      Provider<RealmComponent_BootData> realmComponent_BootDataProvider,
      Provider<OkhttpComponent_BootData> okhttpComponent_BootDataProvider,
      Provider<CrashesComponent_BootData> crashesComponent_BootDataProvider,
      Provider<BaseComponent_BootData> baseComponent_BootDataProvider) {
    this.realmComponent_BootDataProvider = realmComponent_BootDataProvider;
    this.okhttpComponent_BootDataProvider = okhttpComponent_BootDataProvider;
    this.crashesComponent_BootDataProvider = crashesComponent_BootDataProvider;
    this.baseComponent_BootDataProvider = baseComponent_BootDataProvider;
  }

  @Override
  public AppComponent_BootData get() {
    return new AppComponent_BootData(
        realmComponent_BootDataProvider.get(),
        okhttpComponent_BootDataProvider.get(),
        crashesComponent_BootDataProvider.get(),
        baseComponent_BootDataProvider.get());
  }

  public static AppComponent_BootData_Factory create(
      Provider<RealmComponent_BootData> realmComponent_BootDataProvider,
      Provider<OkhttpComponent_BootData> okhttpComponent_BootDataProvider,
      Provider<CrashesComponent_BootData> crashesComponent_BootDataProvider,
      Provider<BaseComponent_BootData> baseComponent_BootDataProvider) {
    return new AppComponent_BootData_Factory(
        realmComponent_BootDataProvider,
        okhttpComponent_BootDataProvider,
        crashesComponent_BootDataProvider,
        baseComponent_BootDataProvider);
  }

  public static AppComponent_BootData newAppComponent_BootData(
      RealmComponent_BootData realmComponent_BootData,
      OkhttpComponent_BootData okhttpComponent_BootData,
      CrashesComponent_BootData crashesComponent_BootData,
      BaseComponent_BootData baseComponent_BootData) {
    return new AppComponent_BootData(
        realmComponent_BootData,
        okhttpComponent_BootData,
        crashesComponent_BootData,
        baseComponent_BootData);
  }
}
