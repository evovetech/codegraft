// Generated by Dagger (https://google.github.io/dagger).
package evovetech.sample;

import codegraft.inject.extension.crashlytics.Crashes;
import codegraft.inject.extension.okhttp3.OkhttpModule;
import codegraft.inject.extension.realm.RealmModule;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import evovetech.blog.medium.MediumModule;
import evovetech.finance.plaid.PlaidModule;
import javax.inject.Provider;

public final class BootModule_ProvideComponentFactory implements Factory<AppComponent> {
  private final BootModule module;

  private final Provider<RealmModule> realmModuleProvider;

  private final Provider<OkhttpModule> okhttpModuleProvider;

  private final Provider<PlaidModule> plaidModuleProvider;

  private final Provider<MediumModule> mediumModuleProvider;

  private final Provider<Crashes> crashesProvider;

  private final Provider<AppComponent_BootData> bootDataProvider;

  public BootModule_ProvideComponentFactory(
      BootModule module,
      Provider<RealmModule> realmModuleProvider,
      Provider<OkhttpModule> okhttpModuleProvider,
      Provider<PlaidModule> plaidModuleProvider,
      Provider<MediumModule> mediumModuleProvider,
      Provider<Crashes> crashesProvider,
      Provider<AppComponent_BootData> bootDataProvider) {
    this.module = module;
    this.realmModuleProvider = realmModuleProvider;
    this.okhttpModuleProvider = okhttpModuleProvider;
    this.plaidModuleProvider = plaidModuleProvider;
    this.mediumModuleProvider = mediumModuleProvider;
    this.crashesProvider = crashesProvider;
    this.bootDataProvider = bootDataProvider;
  }

  @Override
  public AppComponent get() {
    return Preconditions.checkNotNull(
        module.provideComponent(
            realmModuleProvider.get(),
            okhttpModuleProvider.get(),
            plaidModuleProvider.get(),
            mediumModuleProvider.get(),
            crashesProvider.get(),
            bootDataProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static BootModule_ProvideComponentFactory create(
      BootModule module,
      Provider<RealmModule> realmModuleProvider,
      Provider<OkhttpModule> okhttpModuleProvider,
      Provider<PlaidModule> plaidModuleProvider,
      Provider<MediumModule> mediumModuleProvider,
      Provider<Crashes> crashesProvider,
      Provider<AppComponent_BootData> bootDataProvider) {
    return new BootModule_ProvideComponentFactory(
        module,
        realmModuleProvider,
        okhttpModuleProvider,
        plaidModuleProvider,
        mediumModuleProvider,
        crashesProvider,
        bootDataProvider);
  }

  public static AppComponent proxyProvideComponent(
      BootModule instance,
      RealmModule realmModule,
      OkhttpModule okhttpModule,
      PlaidModule plaidModule,
      MediumModule mediumModule,
      Crashes crashes,
      Object bootData) {
    return Preconditions.checkNotNull(
        instance.provideComponent(
            realmModule,
            okhttpModule,
            plaidModule,
            mediumModule,
            crashes,
            (AppComponent_BootData) bootData),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
