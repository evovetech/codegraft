/*
 * Copyright 2018 evove.tech
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


def codeDir = file("${buildDir}/codegraft")
def srcPkg = "evovetech.gradle.transform.plugin"
def srcPath = srcPkg.replace('.', '/')
def pomVersion = pom.version
def src = """/*
 * Copyright 2018 evove.tech
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${srcPkg}

const val Version = "${pomVersion}"
"""


sourceSets.main.java.srcDirs += codeDir

task writeVersion { t ->
    group "Build"
    description "generates version file"

    tasks.findByName('classes').dependsOn(t)
    tasks.matching { it.name == 'kaptGenerateStubsKotlin' }
            .all { it.dependsOn(t) }

    def dir = new File(codeDir, srcPath)
    def file = new File(dir, "Version.kt")

    inputs.property("src", src)
    outputs.file(file)

    doLast {
        dir.mkdirs()
        file.withWriter { w ->
            w.write(src)
            w.flush()
        }
    }
}
