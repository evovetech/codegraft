// Generated by Dagger (https://google.github.io/dagger).
package codegraft.inject.android;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ViewModelComponent_Implementation_Factory
    implements Factory<ViewModelComponent_Implementation> {
  private final Provider<ViewModels> viewModelsProvider;

  public ViewModelComponent_Implementation_Factory(Provider<ViewModels> viewModelsProvider) {
    this.viewModelsProvider = viewModelsProvider;
  }

  @Override
  public ViewModelComponent_Implementation get() {
    return new ViewModelComponent_Implementation(viewModelsProvider);
  }

  public static ViewModelComponent_Implementation_Factory create(
      Provider<ViewModels> viewModelsProvider) {
    return new ViewModelComponent_Implementation_Factory(viewModelsProvider);
  }

  public static ViewModelComponent_Implementation newViewModelComponent_Implementation(
      Provider<ViewModels> viewModelsProvider) {
    return new ViewModelComponent_Implementation(viewModelsProvider);
  }
}
